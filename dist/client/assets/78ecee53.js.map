{"version":3,"file":"78ecee53.js","sources":["../../../src/components/account/AccountRecoverForm.client.jsx"],"sourcesContent":["import {useState} from 'react';\n\nimport {emailValidation} from '~/lib/utils';\n\nexport function AccountRecoverForm() {\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(null);\n\n  async function onSubmit(event) {\n    event.preventDefault();\n\n    setEmailError(null);\n    setSubmitError(null);\n\n    const newEmailError = emailValidation(event.currentTarget.email);\n\n    if (newEmailError) {\n      setEmailError(newEmailError);\n      return;\n    }\n\n    await callAccountRecoverApi({\n      email,\n    });\n\n    setEmail('');\n    setSubmitSuccess(true);\n  }\n\n  return (\n    <div className=\"flex justify-center my-24 px-4\">\n      <div className=\"max-w-md w-full\">\n        {submitSuccess ? (\n          <>\n            <h1 className=\"text-4xl\">Request Sent.</h1>\n            <p className=\"mt-4\">\n              If that email address is in our system, you will receive an email\n              with instructions about how to reset your password in a few\n              minutes.\n            </p>\n          </>\n        ) : (\n          <>\n            <h1 className=\"text-4xl\">Forgot Password.</h1>\n            <p className=\"mt-4\">\n              Enter the email address associated with your account to receive a\n              link to reset your password.\n            </p>\n          </>\n        )}\n        <form noValidate className=\"pt-6 pb-8 mt-4 mb-4\" onSubmit={onSubmit}>\n          {submitError && (\n            <div className=\"flex items-center justify-center mb-6 bg-zinc-500\">\n              <p className=\"m-4 text-s text-contrast\">{submitError}</p>\n            </div>\n          )}\n          <div className=\"mb-3\">\n            <input\n              className={`mb-1 rounded appearance-none border w-full py-2 px-3 text-primary/90 placeholder:text-primary/50 leading-tight focus:shadow-outline ${\n                emailError ? ' border-red-500' : 'border-gray-900'\n              }`}\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              required\n              placeholder=\"Email address\"\n              aria-label=\"Email address\"\n              // eslint-disable-next-line jsx-a11y/no-autofocus\n              autoFocus\n              value={email}\n              onChange={(event) => {\n                setEmail(event.target.value);\n              }}\n            />\n            {!emailError ? (\n              ''\n            ) : (\n              <p className={`text-red-500 text-xs`}>{emailError} &nbsp;</p>\n            )}\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <button\n              className=\"bg-gray-900 text-contrast rounded py-2 px-4 focus:shadow-outline block w-full\"\n              type=\"submit\"\n            >\n              Request Reset Link\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport async function callAccountRecoverApi({\n  email,\n  password,\n  firstName,\n  lastName,\n}) {\n  try {\n    const res = await fetch(`/account/recover`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({email, password, firstName, lastName}),\n    });\n    if (res.status === 200) {\n      return {};\n    } else {\n      return res.json();\n    }\n  } catch (error) {\n    return {\n      error: error.toString(),\n    };\n  }\n}\n"],"names":["submitSuccess","setSubmitSuccess","useState","submitError","setSubmitError","email","setEmail","emailError","setEmailError","event","preventDefault","newEmailError","emailValidation","currentTarget","callAccountRecoverApi","_jsxs","_Fragment","_jsx","target","value","password","firstName","lastName","res","fetch","method","headers","Accept","body","JSON","stringify","status","json","error","toString"],"mappings":"iVAIqC,YAAA,CACnC,KAAM,CAACA,EAAeC,GAAoBC,EAAAA,QAAAA,SAAS,EAAD,EAC5C,CAACC,EAAaC,GAAkBF,EAAAA,QAAAA,SAAS,IAAD,EACxC,CAACG,EAAOC,GAAYJ,EAAAA,QAAAA,SAAS,EAAD,EAC5B,CAACK,EAAYC,GAAiBN,EAAAA,QAAAA,SAAS,IAAD,EAE5C,iBAAwBO,EAAO,CAC7BA,EAAMC,eAAN,EAEAF,EAAc,IAAD,EACbJ,EAAe,IAAD,EAEd,KAAMO,GAAgBC,EAAgBH,EAAMI,cAAcR,KAArB,EAErC,GAAIM,EAAe,CACjBH,EAAcG,CAAD,EACb,MACD,CAED,KAAMG,GAAsB,CAC1BT,OAAAA,CADyB,EAI3BC,EAAS,EAAD,EACRL,EAAiB,EAAD,CACjB,CAED,SACE,MAAA,CAAK,UAAU,iCAAf,WACE,MAAA,CAAK,UAAU,kBAAf,SAAA,CACGD,EACCe,EAAAC,EAAA,CAAA,SACE,CAAAC,EAAA,KAAA,CAAI,UAAU,WAAd,SAAA,eAAA,CAAA,EACAA,EAAA,IAAA,CAAG,UAAU,OAAb,SAAA,wIAAA,CAFF,CAAA,CAAA,CAAA,EASAF,EAAAC,EAAA,CAAA,SACE,CAAAC,EAAA,KAAA,CAAI,UAAU,WAAd,SAAA,kBAAA,CAAA,EACAA,EAAA,IAAA,CAAG,UAAU,OAAb,SAAA,gGAAA,CAFF,CAAA,CAAA,CAAA,EAQFF,EAAA,OAAA,CAAM,WAAN,GAAiB,UAAU,sBAAsB,WAAjD,SAAA,CACGZ,GACCc,EAAA,MAAA,CAAK,UAAU,oDAAf,WACE,IAAA,CAAG,UAAU,2BAAb,SAAyCd,CAAAA,CAAzC,CAAA,CADF,EAIFY,EAAA,MAAA,CAAK,UAAU,OAAf,SACE,CAAAE,EAAA,QAAA,CACE,UAAY,uIACVV,EAAa,kBAAoB,oBAEnC,GAAG,QACH,KAAK,QACL,KAAK,QACL,aAAa,QACb,SARF,GASE,YAAY,gBACZ,aAAW,gBAEX,UAZF,GAaE,MAAOF,EACP,SAAWI,AAAU,GAAA,CACVA,EAAAA,EAAMS,OAAOC,KAAd,CACT,CAhBH,CAAA,EAkBC,AAACZ,IAGA,IAAA,CAAG,UAAY,uBAAf,SAAA,CAAuCA,EAAvC,OAAA,CAAA,CAtBJ,EAoBI,EApBJ,CAAA,CAAA,EAyBAU,EAAA,MAAA,CAAK,UAAU,oCAAf,WACE,SAAA,CACE,UAAU,gFACV,KAAK,SAFP,SAAA,oBAAA,CAAA,CAAA,CAhCJ,CAAA,CAAA,CAnBF,CAAA,CAAA,CAAA,CAAA,CAFJ,CAgED,CAE2C,iBAAA,CAC1CZ,QACAe,WACAC,YACAC,YACC,CACG,GAAA,CACIC,KAAAA,GAAM,KAAMC,OAAO,mBAAmB,CAC1CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,kBAFT,EAITC,KAAMC,KAAKC,UAAU,CAACzB,QAAOe,WAAUC,YAAWC,UAAAA,CAA5C,CAAA,CANe,EAQnBC,MAAAA,GAAIQ,SAAW,IACV,GAEAR,EAAIS,aAENC,GACA,MAAA,CACLA,MAAOA,EAAMC,SAAN,CAAA,CAEV,CACF"}
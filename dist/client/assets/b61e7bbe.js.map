{"version":3,"file":"b61e7bbe.js","sources":["../../../node_modules/@shopify/hydrogen/dist/esnext/hooks/useCart/useCart.js","../../../node_modules/@shopify/hydrogen/dist/esnext/components/ShopPayButton/ShopPayButton.client.js"],"sourcesContent":["import React from 'react';\nimport { CartContext } from '../../components/CartProvider/context';\n/**\n * The `useCart` hook provides access to the cart object. It must be a descendent of a `CartProvider` component.\n */\nexport function useCart() {\n    const context = React.useContext(CartContext);\n    if (!context) {\n        throw new Error('Expected a Cart Context, but no Cart Context was found');\n    }\n    return context;\n}\n","import React from 'react';\nimport { useShop } from '../../foundation/useShop';\nimport { useLoadScript } from '../../hooks/useLoadScript/useLoadScript.client';\nconst URL = 'https://cdn.shopify.com/shopifycloud/shop-js/v1.0/client.js';\n/**\n * The `ShopPayButton` component renders a button that redirects to the Shop Pay checkout.\n */\nexport function ShopPayButton({ variantIds, className, variantIdsAndQuantities, width, }) {\n    const { storeDomain } = useShop();\n    const shopPayLoadedStatus = useLoadScript(URL);\n    let ids;\n    if (variantIds && variantIdsAndQuantities) {\n        throw new Error(DoublePropsErrorMessage);\n    }\n    if (variantIds) {\n        ids = variantIds.reduce((prev, curr) => {\n            const bareId = getIdFromGid(curr);\n            if (bareId) {\n                prev.push(bareId);\n            }\n            return prev;\n        }, []);\n    }\n    else if (variantIdsAndQuantities) {\n        ids = variantIdsAndQuantities.reduce((prev, curr) => {\n            const bareId = getIdFromGid(curr?.id);\n            if (bareId) {\n                prev.push(`${bareId}:${curr?.quantity ?? 1}`);\n            }\n            return prev;\n        }, []);\n    }\n    else {\n        throw new Error(MissingPropsErrorMessage);\n    }\n    const style = width\n        ? {\n            '--shop-pay-button-width': width,\n        }\n        : undefined;\n    return (\n    /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n    React.createElement(\"div\", { className: className, tabIndex: 0, style: style }, shopPayLoadedStatus === 'done' && (React.createElement(\"shop-pay-button\", { \"store-url\": `https://${storeDomain}`, variants: ids.join(',') })))\n    /* eslint-enable jsx-a11y/no-noninteractive-tabindex */\n    );\n}\n/**\n * Takes a string in the format of \"gid://shopify/ProductVariant/41007289630776\" and returns a string of the ID part at the end: \"41007289630776\"\n */\nexport function getIdFromGid(id) {\n    if (!id)\n        return;\n    return id.split('/').pop();\n}\nexport const MissingPropsErrorMessage = `You must pass in either \"variantIds\" or \"variantIdsAndQuantities\" to ShopPayButton`;\nexport const DoublePropsErrorMessage = `You must provide either a variantIds or variantIdsAndQuantities prop, but not both in the ShopPayButton component`;\n"],"names":[],"mappings":"8IAKO,YAAmB,CACtB,KAAM,GAAU,EAAM,WAAW,CAAW,EAC5C,GAAI,CAAC,EACD,KAAM,IAAI,OAAM,wDAAwD,EAE5E,MAAO,EACX,CCRA,KAAM,GAAM,8DAIL,WAAuB,CAAE,aAAY,YAAW,0BAAyB,SAAU,CACtF,KAAM,CAAE,eAAgB,IAClB,EAAsB,EAAc,CAAG,EAC7C,GAAI,GACJ,GAAI,GAAc,EACd,KAAM,IAAI,OAAM,CAAuB,EAE3C,GAAI,EACA,EAAM,EAAW,OAAO,CAAC,EAAM,IAAS,CACpC,KAAM,GAAS,EAAa,CAAI,EAChC,MAAI,IACA,EAAK,KAAK,CAAM,EAEb,CACV,EAAE,CAAE,CAAA,UAEA,EACL,EAAM,EAAwB,OAAO,CAAC,EAAM,IAAS,OACjD,KAAM,GAAS,EAAa,iBAAM,EAAE,EACpC,MAAI,IACA,EAAK,KAAK,GAAG,KAAU,oBAAM,WAAN,OAAkB,GAAG,EAEzC,CACV,EAAE,CAAE,CAAA,MAGL,MAAM,IAAI,OAAM,CAAwB,EAE5C,KAAM,GAAQ,EACR,CACE,0BAA2B,CAC9B,EACC,OACN,MAEA,GAAM,cAAc,MAAO,CAAE,UAAW,EAAW,SAAU,EAAG,MAAO,GAAS,IAAwB,QAAW,EAAM,cAAc,kBAAmB,CAAE,YAAa,WAAW,IAAe,SAAU,EAAI,KAAK,GAAG,CAAC,CAAE,CAAE,CAGlO,CAIO,WAAsB,EAAI,CAC7B,GAAI,EAAC,EAEL,MAAO,GAAG,MAAM,GAAG,EAAE,IAAG,CAC5B,CACO,KAAM,GAA2B,qFAC3B,EAA0B"}
{"version":3,"file":"974cb077.js","sources":["../../../src/components/account/AccountPasswordResetForm.client.jsx"],"sourcesContent":["import {useState} from 'react';\nimport {useNavigate} from '@shopify/hydrogen/client';\n\nexport function AccountPasswordResetForm({id, resetToken}) {\n  const navigate = useNavigate();\n\n  const [submitError, setSubmitError] = useState(null);\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState(null);\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [passwordConfirmError, setPasswordConfirmError] = useState(null);\n\n  function passwordValidation(form) {\n    setPasswordError(null);\n    setPasswordConfirmError(null);\n\n    let hasError = false;\n\n    if (!form.password.validity.valid) {\n      hasError = true;\n      setPasswordError(\n        form.password.validity.valueMissing\n          ? 'Please enter a password'\n          : 'Passwords must be at least 6 characters',\n      );\n    }\n\n    if (!form.passwordConfirm.validity.valid) {\n      hasError = true;\n      setPasswordConfirmError(\n        form.password.validity.valueMissing\n          ? 'Please re-enter a password'\n          : 'Passwords must be at least 6 characters',\n      );\n    }\n\n    if (password !== passwordConfirm) {\n      hasError = true;\n      setPasswordConfirmError('The two password entered did not match.');\n    }\n\n    return hasError;\n  }\n\n  async function onSubmit(event) {\n    event.preventDefault();\n\n    if (passwordValidation(event.currentTarget)) {\n      return;\n    }\n\n    const response = await callPasswordResetApi({\n      id,\n      resetToken,\n      password,\n    });\n\n    if (response.error) {\n      setSubmitError(response.error);\n      return;\n    }\n\n    navigate('/account');\n  }\n\n  return (\n    <div className=\"flex justify-center my-24 px-4\">\n      <div className=\"max-w-md w-full\">\n        <h1 className=\"text-4xl\">Reset Password.</h1>\n        <p className=\"mt-4\">Enter a new password for your account.</p>\n        <form noValidate className=\"pt-6 pb-8 mt-4 mb-4\" onSubmit={onSubmit}>\n          {submitError && (\n            <div className=\"flex items-center justify-center mb-6 bg-zinc-500\">\n              <p className=\"m-4 text-s text-contrast\">{submitError}</p>\n            </div>\n          )}\n          <div className=\"mb-3\">\n            <input\n              className={`mb-1 appearance-none border w-full py-2 px-3 text-primary/90 placeholder:text-primary/50 leading-tight focus:shadow-outline ${\n                passwordError ? ' border-red-500' : 'border-gray-900'\n              }`}\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              placeholder=\"Password\"\n              aria-label=\"Password\"\n              // eslint-disable-next-line jsx-a11y/no-autofocus\n              autoFocus\n              value={password}\n              minLength={8}\n              required\n              onChange={(event) => {\n                setPassword(event.target.value);\n              }}\n            />\n            <p\n              className={`text-red-500 text-xs ${\n                !passwordError ? 'invisible' : ''\n              }`}\n            >\n              {passwordError} &nbsp;\n            </p>\n          </div>\n          <div className=\"mb-3\">\n            <input\n              className={`mb-1 appearance-none border w-full py-2 px-3 text-primary/90 placeholder:text-primary/50 leading-tight focus:shadow-outline ${\n                passwordConfirmError ? ' border-red-500' : 'border-gray-900'\n              }`}\n              id=\"passwordConfirm\"\n              name=\"passwordConfirm\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              placeholder=\"Re-enter password\"\n              aria-label=\"Re-enter password\"\n              value={passwordConfirm}\n              required\n              minLength={8}\n              onChange={(event) => {\n                setPasswordConfirm(event.target.value);\n              }}\n            />\n            <p\n              className={`text-red-500 text-xs ${\n                !passwordConfirmError ? 'invisible' : ''\n              }`}\n            >\n              {passwordConfirmError} &nbsp;\n            </p>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <button\n              className=\"bg-gray-900 text-contrast rounded py-2 px-4 focus:shadow-outline block w-full\"\n              type=\"submit\"\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport async function callPasswordResetApi({id, resetToken, password}) {\n  try {\n    const res = await fetch(`/account/reset`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({id, resetToken, password}),\n    });\n\n    if (res.ok) {\n      return {};\n    } else {\n      return res.json();\n    }\n  } catch (error) {\n    return {\n      error: error.toString(),\n    };\n  }\n}\n"],"names":["id","resetToken","navigate","useNavigate","submitError","setSubmitError","useState","password","setPassword","passwordError","setPasswordError","passwordConfirm","setPasswordConfirm","passwordConfirmError","setPasswordConfirmError","form","hasError","validity","valid","valueMissing","event","passwordValidation","preventDefault","currentTarget","response","callPasswordResetApi","error","_jsx","_jsxs","target","value","res","fetch","method","headers","Accept","body","JSON","stringify","ok","json","toString"],"mappings":"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"}